

跳转到指定行：

	1. 88G （命令模式）

	2. :88  (末行模式)

跳转文件首：

	gg （命令模式）

跳转文件尾：

	G（命令模式）

自动格式化程序：

	gg=G（命令模式）

大括号对应：

	% （命令模式）

光标移至行首：

	0 （命令模式）执行结束，工作模式不变。

光标移至行尾：

	$ （命令模式）执行结束，工作模式不变。



删除单个字符：

	x （命令模式）执行结束，工作模式不变。

替换单个字符：

	将待替换的字符用光标选中， r （命令模式），再按欲替换的字符

删除一个单词：

	dw（命令模式）光标置于单词的首字母进行操作。

删除光标至行尾：

	D 或者 d$（命令模式）

删除光标至行首：

	d0 （命令模式）

删除指定区域：

	按 V （命令模式）切换为 “可视模式”，使用 hjkl挪移光标来选中待删除区域。  按 d 删除该区域数据。

删除指定1行：

	在光标所在行，按 dd （命令模式）


删除指定N行：

	在光标所待删除首行，按 Ndd （命令模式）

复制一行：

	yy

粘贴：
	p：向后、P：向前。


查找：
	1. 找 设想 内容：

		命令模式下， 按 “/” 输入欲搜索关键字，回车。使用 n 检索下一个。

	2. 找 看到的内容：

		命令模式下，将光标置于单词任意一个字符上，按 “*”/ “#” 

单行替换：

	将光标置于待替换行上， 进入末行模式，输入 :s /原数据/新数据

通篇替换：

	末行模式， :%s /原数据/新数据/g   g:不加，只替换每行首个。   sed 

指定行的替换：

	末行模式， :起始行号，终止行号s /原数据/新数据/g   g:不加，只替换每行首个。

		:29,35s /printf/println/g

撤销、反撤销：

	u、ctrl+r（命令模式）

分屏：
	sp：横屏分。 Ctrl+ww 切换。

	vsp：竖屏分。Ctrl+ww 切换。

跳转至 man 手册：

	将光标置于待查看函数单词上，使用 K（命令模式）跳转。 指定卷， nK

查看宏定义：

	将光标置于待查看宏定义单词上，使用 [d 查看定义语句。


在末行模式执行shell命令：

	:!命令		:! ls -l 

----------------------------------------------------------------	
gcc编译：

	4步骤： 预处理、编译、汇编、连接。

	-I：	指定头文件所在目录位置。

	-c：	只做预处理、编译、汇编。得到 二进制 文件！！！

	-g：	编译时添加调试语句。 主要支持 gdb 调试。

	-Wall： 显示所有警告信息。

	-D：	向程序中“动态”注册宏定义。   #define NAME VALUE


静态库制作及使用步骤：

	1. 将 .c 生成 .o 文件

		gcc -c add.c -o add.o

	2. 使用 ar 工具制作静态库

		ar rcs  lib库名.a  add.o sub.o div.o

	3. 编译静态库到可执行文件中：

		gcc test.c lib库名.a -o a.out


头文件守卫：防止头文件被重复包含

	#ifndef _HEAD_H_

	#define _HEAD_H_

	......

	#endif


动态库制作及使用：

	1.  将 .c 生成 .o 文件， （生成与位置无关的代码 -fPIC）

		gcc -c add.c -o add.o -fPIC

	2. 使用 gcc -shared 制作动态库

		gcc -shared -o lib库名.so	add.o sub.o div.o

	3. 编译可执行程序时，指定所使用的动态库。  -l：指定库名(去掉lib前缀和.so后缀)  -L：指定库路径。

		gcc test.c -o a.out -lmymath -L./lib

	4. 运行可以执行程序 ./a.out 出错！！！！ --- ldd a.out --> "not found"

		error while loading shared libraries: libxxx.so: cannot open shared object file: No such file or directory

		原因：
			链接器：	工作于链接阶段， 工作时需要 -l 和 -L

			动态链接器：	工作于程序运行阶段，工作时需要提供动态库所在目录位置。

		解决方式：				

			【1】 通过环境变量：  export LD_LIBRARY_PATH=动态库路径

				./a.out 成功！！！  （临时生效， 终端重启环境变量失效）

			【2】 永久生效： 写入 终端配置文件。  .bashrc  建议使用绝对路径。

				1) vi ~/.bashrc

				2) 写入 export LD_LIBRARY_PATH=动态库路径  保存

				3）. .bashrc/  source .bashrc / 重启 终端  ---> 让修改后的.bashrc生效

				4）./a.out 成功！！！ 

			【3】 拷贝自定义动态库 到 /lib (标准C库所在目录位置)

			【4】 配置文件法

				1）sudo vi /etc/ld.so.conf

				2) 写入 动态库绝对路径  保存

				3）sudo ldconfig -v  使配置文件生效。

				4）./a.out 成功！！！--- 使用 ldd  a.out 查看

		

	












